<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Neutrale przyciski -->
    <SolidColorBrush x:Key="Btn.Background" Color="#2A2C31"/>
    <SolidColorBrush x:Key="Btn.Hover"      Color="#32343A"/>
    <SolidColorBrush x:Key="Btn.Pressed"    Color="#26282C"/>
    <SolidColorBrush x:Key="Btn.Border"     Color="#3A3D44"/>

    <!-- Bazowy button -->
    <Style TargetType="Button">
        <Setter Property="Foreground"       Value="{DynamicResource App.Foreground}"/>
        <Setter Property="Background"       Value="{DynamicResource Btn.Background}"/>
        <Setter Property="BorderBrush"      Value="{DynamicResource Btn.Border}"/>
        <Setter Property="BorderThickness"  Value="1"/>
        <Setter Property="Padding"          Value="16,8"/>
        <Setter Property="Margin"           Value="6,6,0,0"/>
        <Setter Property="FontWeight"       Value="SemiBold"/>
        <Setter Property="Cursor"           Value="Hand"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="8">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Btn.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Btn.Pressed}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary = niebieski akcent -->
    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground"  Value="{DynamicResource Accent.Foreground}"/>
        <Setter Property="Background"  Value="{DynamicResource Accent}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Accent}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Accent.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!-- użyjemy tego samego co hover, żeby nie wymagać Accent.Pressed -->
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource Accent.Hover}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
